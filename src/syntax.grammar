@top EDN { value }

value {
  Nil |
  Boolean |
  String |
  Number |
  Map |
  Array
}

list<item> { whitespace* item (whitespace+ item)* whitespace* }

PropertyKey { String | Keyword }
Property { PropertyKey whitespace+ value }

String { string }
Map { "{" list<Property>? "}" }
Array { ("[" | "(") list<value>? (")" | "]") }

@tokens {
  Nil { "nil" }

  Boolean { "true" | "false" }

  Number { '-'? int frac? }
  int  { '0' | $[1-9] std.digit* }
  frac { '.' std.digit+ }

  string { '"' char* '"' }
  char { $[\u{20}\u{21}\u{23}-\u{5b}\u{5d}-\u{10ffff}] | "\\" esc }
  esc  { $["\\\/bfnrt] | "u" hex hex hex hex }
  hex  { $[0-9a-fA-F] }

  identStart { std.asciiLetter | $[<>&%._=?!*+\-$\u{a1}-\u{10ff}/] }
  identChar { identStart | std.digit | ":" | "'" | "#" | "/"}
  ident { identStart identChar* }
  keyword { ":" ":"? ident? } // the invalid token :: can also be considered as a keyword
  Keyword { keyword }

  whitespace { $[ \n\r\t,] }

  "{" "}" "[" "]" "(" ")" ","
}

@detectDelim
